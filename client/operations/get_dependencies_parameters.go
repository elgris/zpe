// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDependenciesParams creates a new GetDependenciesParams object
// with the default values initialized.
func NewGetDependenciesParams() *GetDependenciesParams {
	var ()
	return &GetDependenciesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDependenciesParamsWithTimeout creates a new GetDependenciesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDependenciesParamsWithTimeout(timeout time.Duration) *GetDependenciesParams {
	var ()
	return &GetDependenciesParams{

		timeout: timeout,
	}
}

// NewGetDependenciesParamsWithContext creates a new GetDependenciesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDependenciesParamsWithContext(ctx context.Context) *GetDependenciesParams {
	var ()
	return &GetDependenciesParams{

		Context: ctx,
	}
}

// NewGetDependenciesParamsWithHTTPClient creates a new GetDependenciesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDependenciesParamsWithHTTPClient(client *http.Client) *GetDependenciesParams {
	var ()
	return &GetDependenciesParams{
		HTTPClient: client,
	}
}

/*GetDependenciesParams contains all the parameters to send to the API endpoint
for the get dependencies operation typically these are written to a http.Request
*/
type GetDependenciesParams struct {

	/*EndTs
	  only return links from spans where `Span.timestamp`  are at or before
	this time in epoch milliseconds.


	*/
	EndTs int64
	/*Lookback
	  only return links where all Span.timestamp are at or after
	(`endTs - * lookback`) in milliseconds. Defaults to `endTs`, limited
	to a system parameter `QUERY_LOOKBACK`


	*/
	Lookback *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get dependencies params
func (o *GetDependenciesParams) WithTimeout(timeout time.Duration) *GetDependenciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get dependencies params
func (o *GetDependenciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get dependencies params
func (o *GetDependenciesParams) WithContext(ctx context.Context) *GetDependenciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get dependencies params
func (o *GetDependenciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get dependencies params
func (o *GetDependenciesParams) WithHTTPClient(client *http.Client) *GetDependenciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get dependencies params
func (o *GetDependenciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndTs adds the endTs to the get dependencies params
func (o *GetDependenciesParams) WithEndTs(endTs int64) *GetDependenciesParams {
	o.SetEndTs(endTs)
	return o
}

// SetEndTs adds the endTs to the get dependencies params
func (o *GetDependenciesParams) SetEndTs(endTs int64) {
	o.EndTs = endTs
}

// WithLookback adds the lookback to the get dependencies params
func (o *GetDependenciesParams) WithLookback(lookback *int64) *GetDependenciesParams {
	o.SetLookback(lookback)
	return o
}

// SetLookback adds the lookback to the get dependencies params
func (o *GetDependenciesParams) SetLookback(lookback *int64) {
	o.Lookback = lookback
}

// WriteToRequest writes these params to a swagger request
func (o *GetDependenciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endTs
	qrEndTs := o.EndTs
	qEndTs := swag.FormatInt64(qrEndTs)
	if qEndTs != "" {
		if err := r.SetQueryParam("endTs", qEndTs); err != nil {
			return err
		}
	}

	if o.Lookback != nil {

		// query param lookback
		var qrLookback int64
		if o.Lookback != nil {
			qrLookback = *o.Lookback
		}
		qLookback := swag.FormatInt64(qrLookback)
		if qLookback != "" {
			if err := r.SetQueryParam("lookback", qLookback); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
