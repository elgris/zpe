// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSpansParams creates a new GetSpansParams object
// with the default values initialized.
func NewGetSpansParams() *GetSpansParams {
	var ()
	return &GetSpansParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSpansParamsWithTimeout creates a new GetSpansParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSpansParamsWithTimeout(timeout time.Duration) *GetSpansParams {
	var ()
	return &GetSpansParams{

		timeout: timeout,
	}
}

// NewGetSpansParamsWithContext creates a new GetSpansParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSpansParamsWithContext(ctx context.Context) *GetSpansParams {
	var ()
	return &GetSpansParams{

		Context: ctx,
	}
}

// NewGetSpansParamsWithHTTPClient creates a new GetSpansParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSpansParamsWithHTTPClient(client *http.Client) *GetSpansParams {
	var ()
	return &GetSpansParams{
		HTTPClient: client,
	}
}

/*GetSpansParams contains all the parameters to send to the API endpoint
for the get spans operation typically these are written to a http.Request
*/
type GetSpansParams struct {

	/*ServiceName
	  Ex favstar (required) - Lower-case label of a node in the service
	graph. The /services endpoint enumerates possible input values.


	*/
	ServiceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get spans params
func (o *GetSpansParams) WithTimeout(timeout time.Duration) *GetSpansParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get spans params
func (o *GetSpansParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get spans params
func (o *GetSpansParams) WithContext(ctx context.Context) *GetSpansParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get spans params
func (o *GetSpansParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get spans params
func (o *GetSpansParams) WithHTTPClient(client *http.Client) *GetSpansParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get spans params
func (o *GetSpansParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServiceName adds the serviceName to the get spans params
func (o *GetSpansParams) WithServiceName(serviceName string) *GetSpansParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the get spans params
func (o *GetSpansParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WriteToRequest writes these params to a swagger request
func (o *GetSpansParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param serviceName
	qrServiceName := o.ServiceName
	qServiceName := qrServiceName
	if qServiceName != "" {
		if err := r.SetQueryParam("serviceName", qServiceName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
